version: '3.9'

volumes:
  postgres_data:

services:

  products:
    build: ./products
    container_name: go_rabbit__products
    restart: always
    ports:
      - 5020:5020
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  account:
    build: ./account
    container_name: go_rabbit__account
    restart: always
    ports:
      - 5010:5010
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy    

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: go_rabbit__rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3
      
  postgres:
    image: postgres:latest
    container_name: go_rabbit__postgres
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 10s
      retries: 120

  application-migrate:
    build: ./configs/application-migrate
    container_name: go_rabbit__migrate
    env_file:
      - .env
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
